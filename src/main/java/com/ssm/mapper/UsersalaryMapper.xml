<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.UsersalaryMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.po.Usersalary" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="createuserid" property="createuserid" jdbcType="VARCHAR" />
    <result column="createusername" property="createusername" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="salarymonth" property="salarymonth" jdbcType="VARCHAR" />
    <result column="salary1" property="salary1" jdbcType="VARCHAR" />
    <result column="salary2" property="salary2" jdbcType="VARCHAR" />
    <result column="salary3" property="salary3" jdbcType="VARCHAR" />
    <result column="salary4" property="salary4" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="bak1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
    <result column="bak3" property="bak3" jdbcType="VARCHAR" />
    <result column="bak4" property="bak4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, username, createuserid, createusername, createdate, salarymonth, salary1, 
    salary2, salary3, salary4, sort, bak1, bak2, bak3, bak4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.po.UsersalaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usersalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from usersalary
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from usersalary
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.po.UsersalaryExample" >
    delete from usersalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.po.Usersalary" >
    insert into usersalary (id, userid, username, 
      createuserid, createusername, createdate, 
      salarymonth, salary1, salary2, 
      salary3, salary4, sort, 
      bak1, bak2, bak3, bak4
      )
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{createuserid,jdbcType=VARCHAR}, #{createusername,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, 
      #{salarymonth,jdbcType=VARCHAR}, #{salary1,jdbcType=VARCHAR}, #{salary2,jdbcType=VARCHAR}, 
      #{salary3,jdbcType=VARCHAR}, #{salary4,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, #{bak3,jdbcType=VARCHAR}, #{bak4,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.po.Usersalary" >
    insert into usersalary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="createuserid != null" >
        createuserid,
      </if>
      <if test="createusername != null" >
        createusername,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="salarymonth != null" >
        salarymonth,
      </if>
      <if test="salary1 != null" >
        salary1,
      </if>
      <if test="salary2 != null" >
        salary2,
      </if>
      <if test="salary3 != null" >
        salary3,
      </if>
      <if test="salary4 != null" >
        salary4,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
      <if test="bak3 != null" >
        bak3,
      </if>
      <if test="bak4 != null" >
        bak4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null" >
        #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="createusername != null" >
        #{createusername,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="salarymonth != null" >
        #{salarymonth,jdbcType=VARCHAR},
      </if>
      <if test="salary1 != null" >
        #{salary1,jdbcType=VARCHAR},
      </if>
      <if test="salary2 != null" >
        #{salary2,jdbcType=VARCHAR},
      </if>
      <if test="salary3 != null" >
        #{salary3,jdbcType=VARCHAR},
      </if>
      <if test="salary4 != null" >
        #{salary4,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        #{bak4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.po.UsersalaryExample" resultType="java.lang.Integer" >
    select count(*) from usersalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update usersalary
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.createuserid != null" >
        createuserid = #{record.createuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.createusername != null" >
        createusername = #{record.createusername,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.salarymonth != null" >
        salarymonth = #{record.salarymonth,jdbcType=VARCHAR},
      </if>
      <if test="record.salary1 != null" >
        salary1 = #{record.salary1,jdbcType=VARCHAR},
      </if>
      <if test="record.salary2 != null" >
        salary2 = #{record.salary2,jdbcType=VARCHAR},
      </if>
      <if test="record.salary3 != null" >
        salary3 = #{record.salary3,jdbcType=VARCHAR},
      </if>
      <if test="record.salary4 != null" >
        salary4 = #{record.salary4,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
      <if test="record.bak3 != null" >
        bak3 = #{record.bak3,jdbcType=VARCHAR},
      </if>
      <if test="record.bak4 != null" >
        bak4 = #{record.bak4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update usersalary
    set id = #{record.id,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      createuserid = #{record.createuserid,jdbcType=VARCHAR},
      createusername = #{record.createusername,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      salarymonth = #{record.salarymonth,jdbcType=VARCHAR},
      salary1 = #{record.salary1,jdbcType=VARCHAR},
      salary2 = #{record.salary2,jdbcType=VARCHAR},
      salary3 = #{record.salary3,jdbcType=VARCHAR},
      salary4 = #{record.salary4,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR},
      bak3 = #{record.bak3,jdbcType=VARCHAR},
      bak4 = #{record.bak4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.po.Usersalary" >
    update usersalary
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="createuserid != null" >
        createuserid = #{createuserid,jdbcType=VARCHAR},
      </if>
      <if test="createusername != null" >
        createusername = #{createusername,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="salarymonth != null" >
        salarymonth = #{salarymonth,jdbcType=VARCHAR},
      </if>
      <if test="salary1 != null" >
        salary1 = #{salary1,jdbcType=VARCHAR},
      </if>
      <if test="salary2 != null" >
        salary2 = #{salary2,jdbcType=VARCHAR},
      </if>
      <if test="salary3 != null" >
        salary3 = #{salary3,jdbcType=VARCHAR},
      </if>
      <if test="salary4 != null" >
        salary4 = #{salary4,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
      <if test="bak4 != null" >
        bak4 = #{bak4,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.po.Usersalary" >
    update usersalary
    set userid = #{userid,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      createuserid = #{createuserid,jdbcType=VARCHAR},
      createusername = #{createusername,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      salarymonth = #{salarymonth,jdbcType=VARCHAR},
      salary1 = #{salary1,jdbcType=VARCHAR},
      salary2 = #{salary2,jdbcType=VARCHAR},
      salary3 = #{salary3,jdbcType=VARCHAR},
      salary4 = #{salary4,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR},
      bak4 = #{bak4,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
   <select id="selectByExamplePage" resultMap="BaseResultMap" parameterType="com.ssm.po.UsersalaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from usersalary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
     limit #{pageStart,jdbcType=INTEGER}  ,  #{pageSize,jdbcType=INTEGER}
  </select>
  
</mapper>